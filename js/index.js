document.addEventListener('DOMContentLoaded', async () => {
	const themeToggle = document.getElementById('theme-toggle')
	const htmlElement = document.documentElement
	const languageSelect = document.getElementById('language-select')
	const content = document.getElementById('content')
	const nav = document.querySelector('nav')
	const header = document.querySelector('header')
	const allLinks = document.querySelectorAll('a[href]')
	const indicator = document.createElement('div')

	indicator.classList.add('nav-indicator')
	nav.appendChild(indicator)

	document
		.querySelector('meta[name="theme-color"]')
		.setAttribute('content', '#384254')

	let translations = {} // –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤

	// üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º JSON —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
	async function loadTranslations(lang) {
		try {
			const response = await fetch(`../locale/${lang}.json`)
			if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: /locale/${lang}.json`)
			translations = await response.json()
			applyTranslation()
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤:', error)
		}
	}

	// üîπ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞
	function applyTranslation() {
		document.querySelectorAll('[data-lang]').forEach(el => {
			const key = el.getAttribute('data-lang')
			if (translations[key]) {
				el.textContent = translations[key]
			}
		})
	}

	// üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∞–∫—Ç–∏–≤–Ω–æ–π —Å—Å—ã–ª–∫–∏
	const updateIndicator = link => {
		const { left, width } = link.getBoundingClientRect()
		const navLeft = nav.getBoundingClientRect().left
		indicator.style.width = `${width}px`
		indicator.style.transform = `translateX(${left - navLeft}px)`
	}

	// üîπ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü
	const loadPage = async page => {
		const pagePath = `/pages/${page}.html?v=${Date.now()}`
		console.log(`üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É: ${pagePath}`)

		try {
			const response = await fetch(pagePath, {
				method: 'GET',
				mode: 'no-cors', // –£–±–∏—Ä–∞–µ–º CORS-–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
				cache: 'no-store', // –ò–∑–±–µ–≥–∞–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
			})

			if (!response.ok) {
				throw new Error(
					`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${pagePath} (–°—Ç–∞—Ç—É—Å: ${response.status})`
				)
			}

			const contentType = response.headers.get('Content-Type')
			if (!contentType || !contentType.includes('text/html')) {
				throw new Error(`‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π Content-Type: ${contentType}`)
			}

			content.innerHTML = await response.text()
			localStorage.setItem('currentPage', page)
			applyTranslation()
			updateActiveLink(page)
		} catch (error) {
			console.error(`üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${error}`)
			content.innerHTML = `<h2>–û—à–∏–±–∫–∞ 404</h2><p>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.</p>`
		}
	}

	// üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π —Å—Å—ã–ª–∫–∏ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
	const updateActiveLink = page => {
		document.querySelectorAll('nav a').forEach(link => {
			const isActive = link.getAttribute('href') === page
			link.classList.toggle('active', isActive)
			if (isActive) updateIndicator(link)
		})
	}

	// üîπ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
	const updateThemeIcons = theme => {
		document
			.getElementById('dark-icon')
			.classList.toggle('hidden', theme !== 'dark')
		document
			.getElementById('light-icon')
			.classList.toggle('hidden', theme === 'dark')
	}

	// –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å–º–µ–Ω—ã —Ç–µ–º—ã
	document.documentElement.style.transition =
		'background-color 0.1s ease-in-out, color 0.1s ease-in-out'

	const savedTheme = localStorage.getItem('theme') || 'dark'
	document.documentElement.setAttribute('data-theme', savedTheme)
	updateThemeIcons(savedTheme)

	themeToggle.addEventListener('click', () => {
		const newTheme =
			document.documentElement.getAttribute('data-theme') === 'dark'
				? 'light'
				: 'dark'

		// –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ —Å–º–µ–Ω–æ–π –∞—Ç—Ä–∏–±—É—Ç–∞, —á—Ç–æ–±—ã —Ç—Ä–∞–Ω–∑–∏—à–Ω —Å—Ä–∞–±–æ—Ç–∞–ª
		document.documentElement.style.transition =
			'background-color 0.1s ease-in-out, color 0.1s ease-in-out'

		document.documentElement.setAttribute('data-theme', newTheme)
		localStorage.setItem('theme', newTheme)
		updateThemeIcons(newTheme)
	})

	// üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –Ω–∞ —Å—Å—ã–ª–∫–∏
	allLinks.forEach(link => {
		link.addEventListener('click', event => {
			event.preventDefault()
			const page = link.getAttribute('href')
			loadPage(page)
		})
	})

	// üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã —è–∑—ã–∫–∞
	languageSelect.addEventListener('change', async event => {
		const lang = event.target.value
		localStorage.setItem('language', lang)
		await loadTranslations(lang)
	})

	// üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø–µ—Ä–µ–≤–æ–¥—ã
	const savedLanguage = localStorage.getItem('language') || 'ru'
	languageSelect.value = savedLanguage
	await loadTranslations(savedLanguage)

	const savedPage = localStorage.getItem('currentPage') || 'home'
	loadPage(savedPage)

	// üîπ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ —Å–∫—Ä–æ–ª–ª–∞ –∫ —Ö–µ–¥–µ—Ä—É
	window.addEventListener('scroll', () => {
		header.classList.toggle('scrolled', window.scrollY > 50)
	})
})
